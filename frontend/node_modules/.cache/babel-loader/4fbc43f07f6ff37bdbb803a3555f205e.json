{"ast":null,"code":"var _jsxFileName = \"/home/my/Desktop/Course/687/Project/demo/src/main/frontend/src/components/Auth/Login.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from \"react-redux\";\nimport * as authActions from \"../../actions/auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Login(props) {\n  const {\n    open,\n    handleClose,\n    handleLogin\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLogin,\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Log In\"))));\n}\n\nconst mapStateToProps = state => ({\n  open: state.getIn(['auth', 'open'])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleClose() {\n    const action = authActions.closeLogin();\n    dispatch(action);\n  },\n\n  handleLogin() {\n    const action = authActions.login();\n    dispatch(action);\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/my/Desktop/Course/687/Project/demo/src/main/frontend/src/components/Auth/Login.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","connect","authActions","Grid","makeStyles","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","Login","props","open","handleClose","handleLogin","classes","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","action","closeLogin","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEHC,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,aAAa,EAAE,QAHZ;AAIHC,IAAAA,UAAU,EAAE;AAJT,GAD8B;AAOrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFN,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFT,GAP+B;AAWrCM,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADJ;AAX6B,CAAZ,CAAD,CAA5B;;AAgBA,SAASQ,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA;AAApB,MAAoCH,KAA1C;AAEA,QAAMI,OAAO,GAAGjB,SAAS,EAAzB;AAEA,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEc,IAAd;AAAoB,IAAA,OAAO,EAAEC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACT,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,KAAK,EAAC,eALV;AAMI,IAAA,IAAI,EAAC,OANT;AAOI,IAAA,YAAY,EAAC,OAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAYI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,EAAE,EAAC,UAPP;AAQI,IAAA,YAAY,EAAC,kBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,CADJ,eA0BI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEQ,WADb;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,SAAS,EAAEC,OAAO,CAACP,MALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ,CADA,CAFJ,CADJ;AA2CH;;AAED,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAChCL,EAAAA,IAAI,EAAEK,KAAK,CAACC,KAAN,CAAY,CAAC,MAAD,EAAS,MAAT,CAAZ;AAD0B,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCP,EAAAA,WAAW,GAAG;AACV,UAAMQ,MAAM,GAAG1B,WAAW,CAAC2B,UAAZ,EAAf;AACAF,IAAAA,QAAQ,CAACC,MAAD,CAAR;AACH,GAJqC;;AAKtCP,EAAAA,WAAW,GAAG;AACV,UAAMO,MAAM,GAAG1B,WAAW,CAAC4B,KAAZ,EAAf;AACAH,IAAAA,QAAQ,CAACC,MAAD,CAAR;AACH;;AARqC,CAAf,CAA3B;;AAWA,eAAe3B,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {connect} from \"react-redux\";\nimport * as authActions from \"../../actions/auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction Login(props) {\n    const {open, handleClose, handleLogin } = props;\n\n    const classes = useStyles();\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Login</DialogTitle>\n            <DialogContent>\n            <form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    onClick={handleLogin}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Log In\n                </Button>\n            </form>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    open: state.getIn(['auth', 'open'])\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleClose() {\n        const action = authActions.closeLogin();\n        dispatch(action);\n    },\n    handleLogin() {\n        const action = authActions.login();\n        dispatch(action);\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}