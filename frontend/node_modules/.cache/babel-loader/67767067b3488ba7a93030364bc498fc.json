{"ast":null,"code":"var _jsxFileName = \"/home/my/Desktop/Course/687/Project/Cattraction/frontend/src/components/Post/index.js\";\nimport Container from \"@material-ui/core/Container\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Main from \"./Main\";\nimport Sidebar from \"./Sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport * as actions from \"../../actions/post\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nconst useStyles = makeStyles(theme => ({\n  mainGrid: {\n    marginTop: 0\n  }\n}));\n\nfunction Post(props) {\n  const classes = useStyles();\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    props.getPost(id);\n  }, []);\n\n  if (!props.isLoading) {\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 5,\n      className: classes.mainGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nconst mapStatesToProps = state => ({\n  isLoading: state.getIn(['post', 'isLoading'])\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPost(id) {\n    dispatch(actions.clearContentData());\n    /*axios.get(`/api/posts/${id}.json`)\n        .then((res) => {\n            const result = res.data;\n            dispatch(actions.changHomeContentData(result));\n        });*/\n\n    axios({\n      method: 'post',\n      url: localStorage.getItem(\"ip\") + '/api/v1/posts/getpost',\n      params: {\n        postId: id\n      }\n    }).then(res => {\n      const result = res.data;\n      dispatch(actions.changHomeContentData(result));\n    });\n  }\n\n});\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(Post);","map":{"version":3,"sources":["/home/my/Desktop/Course/687/Project/Cattraction/frontend/src/components/Post/index.js"],"names":["Container","React","useEffect","makeStyles","Grid","Main","Sidebar","useParams","actions","connect","axios","LinearProgress","useStyles","theme","mainGrid","marginTop","Post","props","classes","id","getPost","isLoading","mapStatesToProps","state","getIn","mapDispatchToProps","dispatch","clearContentData","method","url","localStorage","getItem","params","postId","then","res","result","data","changHomeContentData"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL;AAD2B,CAAZ,CAAD,CAA5B;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,MAAI;AAACO,IAAAA;AAAD,MAAOZ,SAAS,EAApB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAACG,OAAN,CAAcD,EAAd;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACF,KAAK,CAACI,SAAX,EAAsB;AAClB,wBACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAEH,OAAO,CAACJ,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAQH,GATD,MASO;AACH,wBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AACJ;;AAED,MAAMQ,gBAAgB,GAAIC,KAAD,KAAY;AACjCF,EAAAA,SAAS,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,MAAD,EAAS,WAAT,CAAZ;AADsB,CAAZ,CAAzB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCN,EAAAA,OAAO,CAACD,EAAD,EAAK;AACRO,IAAAA,QAAQ,CAAClB,OAAO,CAACmB,gBAAR,EAAD,CAAR;AACA;;;;;;AAKIjB,IAAAA,KAAK,CAAC;AACFkB,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,GAAG,EAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,IAA2B,uBAF7B;AAGFC,MAAAA,MAAM,EAAC;AAAGC,QAAAA,MAAM,EAAEd;AAAX;AAHL,KAAD,CAAL,CAIGe,IAJH,CAIQC,GAAG,IAAI;AACX,YAAMC,MAAM,GAAGD,GAAG,CAACE,IAAnB;AACAX,MAAAA,QAAQ,CAAClB,OAAO,CAAC8B,oBAAR,CAA6BF,MAA7B,CAAD,CAAR;AACH,KAPD;AAQP;;AAhBqC,CAAf,CAA3B;;AAmBA,eAAe3B,OAAO,CAACa,gBAAD,EAAmBG,kBAAnB,CAAP,CAA8CT,IAA9C,CAAf","sourcesContent":["import Container from \"@material-ui/core/Container\";\nimport React, {useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Main from \"./Main\";\nimport Sidebar from \"./Sidebar\";\nimport {useParams} from \"react-router-dom\";\nimport * as actions from \"../../actions/post\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n    mainGrid: {\n        marginTop: 0,\n    },\n}));\n\nfunction Post(props) {\n    const classes = useStyles();\n    let {id} = useParams();\n\n    useEffect(() => {\n        props.getPost(id);\n    }, []);\n\n    if (!props.isLoading) {\n        return (\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={5} className={classes.mainGrid}>\n                    <Main/>\n                    <Sidebar/>\n                </Grid>\n            </Container>\n        )\n    } else {\n        return (\n            <LinearProgress />\n        )\n    }\n}\n\nconst mapStatesToProps = (state) => ({\n    isLoading: state.getIn(['post', 'isLoading']),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPost(id) {\n        dispatch(actions.clearContentData());\n        /*axios.get(`/api/posts/${id}.json`)\n            .then((res) => {\n                const result = res.data;\n                dispatch(actions.changHomeContentData(result));\n            });*/\n            axios({\n                method: 'post',\n                url:localStorage.getItem(\"ip\")+'/api/v1/posts/getpost',\n                params:{  postId: id}\n            }).then(res => {\n                const result = res.data;\n                dispatch(actions.changHomeContentData(result));\n            })\n    }\n})\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(Post)\n"]},"metadata":{},"sourceType":"module"}