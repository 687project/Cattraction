{"ast":null,"code":"var _jsxFileName = \"/home/my/Desktop/Course/687/Project/Cattraction/frontend/src/components/Home/CatDating.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  contentWrapper: {\n    margin: '1em 0',\n    flexGrow: 1\n  },\n  cardMediaImg: {\n    width: '180px',\n    height: '100%',\n    float: 'left',\n    marginRight: '1rem'\n  },\n  link: {\n    textDecoration: 'none'\n  },\n  root: {\n    height: '180px'\n  }\n}));\nexport default function CatDating() {\n  const classes = useStyles();\n  const [postList, setPostList] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'post',\n      url: localStorage.getItem(\"ip\") + '/api/v1/posts/catdating',\n      params: {}\n    }).then(res => {\n      setPostList(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, postList.map(post => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/cat-dating/${post.postId}`,\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.cardMediaImg,\n    component: \"img\",\n    alt: \"Contemplative Reptile\",\n    image: post.coverUrl,\n    title: \"Contemplative Reptile\",\n    classes: classes.cardMediaImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, post.catName, \", \", post.catBreed, \", \", post.catGender === \"true\" ? 'boy' : 'girl'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    component: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, post.catLocation), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, post.description.length > 200 ? post.description.substring(0, 230) + \" ......\" : post.description))))))));\n}","map":{"version":3,"sources":["/home/my/Desktop/Course/687/Project/Cattraction/frontend/src/components/Home/CatDating.js"],"names":["React","useEffect","useState","makeStyles","axios","CardContent","Typography","CardMedia","Card","Grid","Link","useStyles","theme","contentWrapper","margin","flexGrow","cardMediaImg","width","height","float","marginRight","link","textDecoration","root","CatDating","classes","postList","setPostList","method","url","localStorage","getItem","params","then","res","data","map","post","postId","coverUrl","catName","catBreed","catGender","catLocation","description","length","substring"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentWrapper: {\n        margin: '1em 0',\n        flexGrow: 1,\n    },\n    cardMediaImg: {\n        width: '180px',\n        height: '100%',\n        float: 'left',\n        marginRight: '1rem',\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    root: {\n        height: '180px',\n    }\n\n}));\n\nexport default function CatDating() {\n    const classes = useStyles();\n    const [postList, setPostList] = useState([]);\n\n    useEffect(() => {\n        axios({\n            method: 'post',\n            url: localStorage.getItem(\"ip\") + '/api/v1/posts/catdating',\n            params:{ }\n        }).then(res => {\n            setPostList(res.data);\n        })\n    }, []);\n\n    return (\n        <div className={classes.contentWrapper}>\n            <Grid container\n                  spacing={3}\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"flex-start\"\n            >\n                {postList.map((post) => (\n                    <Grid item xs={12} sm={12}>\n                        <Link to={`/posts/cat-dating/${post.postId}`} className={classes.link}>\n                            <Card className={classes.root}>\n                                <CardMedia\n                                    className={classes.cardMediaImg}\n                                    component=\"img\"\n                                    alt=\"Contemplative Reptile\"\n                                    image={post.coverUrl}\n                                    title=\"Contemplative Reptile\"\n                                    classes={classes.cardMediaImg}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"h4\" component=\"h2\">\n                                        {post.catName}, {post.catBreed}, {post.catGender === \"true\" ? 'boy': 'girl'}\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"subtitle2\">\n                                        {post.catLocation}\n                                    </Typography>\n                                    <Typography variant=\"body1\" component=\"p\">\n                                        {post.description.length > 200 ? post.description.substring(0,230) + \" ......\" : post.description}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Link>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}