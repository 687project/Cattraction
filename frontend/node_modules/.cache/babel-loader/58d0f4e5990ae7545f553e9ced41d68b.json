{"ast":null,"code":"var _jsxFileName = \"/home/my/Desktop/Course/687/Project/Cattraction/frontend/src/components/CreatePost/index.js\";\nimport Container from \"@material-ui/core/Container\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: '20px',\n    boxShadow: '0 2px 8px 0 rgba(0,0,0,.05)',\n    backgroundColor: '#fff',\n    padding: '20px'\n  },\n  input: {\n    display: 'none'\n  },\n  submitDiv: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  imgGrid: {\n    position: 'relative',\n    display: 'block'\n  },\n  deleteBtn: {\n    position: 'absolute',\n    right: '50%'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    minWidth: 240\n  }\n}));\n\nfunction CreatePost(props) {\n  const classes = useStyles();\n  const [photos, setPhotos] = useState([]);\n  const [description, setDescription] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [postCategory, setPostCategory] = useState(\"general\");\n  const [catName, setCatName] = useState(\"\");\n  const [catAge, setCatAge] = useState(\"\");\n  const [catBreed, setCatBreed] = useState(\"\");\n  const [catLocation, setCatLocation] = useState(\"\");\n  const [postTitle, setPostTitle] = useState(\"\");\n\n  const handleSubmit = () => {\n    const form = new FormData();\n\n    for (let i in photos) {\n      form.append('photos', photos[i]);\n    }\n\n    form.append('description', description);\n    form.append('creater', localStorage.getItem('email'));\n    form.append('time', new Date().toLocaleString());\n    return axios.post(localStorage.getItem(\"ip\") + \"/api/v1/user-profile/newpost\", form, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res);\n      alert(\"Submit successfully!\");\n      setSuccess(true);\n    });\n  };\n\n  const handleDeletePhoto = index => {\n    const newPhotos = [...photos];\n    newPhotos.splice(index, 1);\n    setPhotos(newPhotos);\n  };\n\n  if (success) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Create a New Post\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"select-category-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"Post Category\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"select-category-label\",\n    id: \"demo-simple-select-outlined\",\n    value: postCategory,\n    onChange: e => setPostCategory(e.target.value),\n    label: \"Post Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"general\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"General\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"catDating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, \"Cat Dating\"))), postCategory === \"catDating\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 60\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      width: '50%',\n      margin: '1rem 0'\n    },\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: catName,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"catName\",\n    label: \"Cat Name\",\n    type: \"text\",\n    id: \"catName\",\n    onChange: e => setCatName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: catAge,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"catAge\",\n    label: \"Cat Age\",\n    name: \"catAge\",\n    type: \"text\",\n    onChange: e => setCatAge(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: catBreed,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"catBreed\",\n    label: \"Cat Breed\",\n    type: \"text\",\n    id: \"catBreed\",\n    autoComplete: \"current-password\",\n    onChange: e => setCatBreed(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: catLocation,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"catLocation\",\n    label: \"Cat Location\",\n    type: \"text\",\n    id: \"catLocation\",\n    onChange: e => setCatLocation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }))))) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Upload your cat photos:\"), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"contained-button-file\",\n    multiple: true,\n    type: \"file\",\n    value: \"\",\n    onChange: e => {\n      console.log(e.target.files[0]);\n      setPhotos([...photos, e.target.files[0]]);\n      console.log(photos);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, photos.map((photo, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.imgGrid,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: URL.createObjectURL(photo),\n    alt: \"preview\",\n    style: {\n      width: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.deleteBtn,\n    variant: \"outlined\",\n    onClick: () => handleDeletePhoto(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 45\n    }\n  }))))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, \"Upload Image\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      minWidth: \"300px\"\n    },\n    value: postTitle,\n    variant: \"outlined\",\n    required: true,\n    name: \"postTitle\",\n    label: \"Post Title\",\n    type: \"text\",\n    id: \"postTitle\",\n    onChange: e => setPostTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, \"Describe your post here:\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"description\",\n    name: \"description\",\n    label: \"Description\",\n    variant: \"outlined\",\n    placeholder: \"Describe your post here...\",\n    rows: 4,\n    fullWidth: true,\n    multiline: true,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nconst mapStatesToProps = state => ({\n  loginStatus: state.getIn(['auth', 'loginStatus'])\n});\n\nexport default connect(mapStatesToProps, null)(CreatePost);","map":{"version":3,"sources":["/home/my/Desktop/Course/687/Project/Cattraction/frontend/src/components/CreatePost/index.js"],"names":["Container","React","useState","makeStyles","Grid","Redirect","connect","Button","IconButton","TextField","Typography","axios","DeleteIcon","MenuItem","FormControl","InputLabel","Select","useStyles","theme","container","marginTop","boxShadow","backgroundColor","padding","input","display","submitDiv","spacing","flexDirection","alignItems","imgGrid","position","deleteBtn","right","formControl","marginBottom","minWidth","CreatePost","props","classes","photos","setPhotos","description","setDescription","success","setSuccess","postCategory","setPostCategory","catName","setCatName","catAge","setCatAge","catBreed","setCatBreed","catLocation","setCatLocation","postTitle","setPostTitle","handleSubmit","form","FormData","i","append","localStorage","getItem","Date","toLocaleString","post","headers","then","res","console","log","alert","handleDeletePhoto","index","newPhotos","splice","e","target","value","width","margin","files","map","photo","URL","createObjectURL","mapStatesToProps","state","loginStatus","getIn"],"mappings":"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","sourcesContent":["import Container from \"@material-ui/core/Container\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: '20px',\n        boxShadow: '0 2px 8px 0 rgba(0,0,0,.05)',\n        backgroundColor: '#fff',\n        padding: '20px',\n    },\n    input: {\n        display: 'none',\n    },\n    submitDiv: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    imgGrid: {\n        position: 'relative',\n        display: 'block',\n    },\n    deleteBtn: {\n        position: 'absolute',\n        right: '50%',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        minWidth: 240,\n    },\n}));\n\nfunction CreatePost(props) {\n    const classes = useStyles();\n\n    const [photos, setPhotos] = useState([])\n    const [description, setDescription] = useState('')\n    const [success, setSuccess] = useState(false);\n    const [postCategory, setPostCategory] = useState(\"general\");\n    const [catName, setCatName] = useState(\"\");\n    const [catAge, setCatAge] = useState(\"\");\n    const [catBreed, setCatBreed] = useState(\"\");\n    const [catLocation, setCatLocation] = useState(\"\");\n    const [postTitle, setPostTitle] = useState(\"\");\n\n    const handleSubmit = () => {\n        const form = new FormData();\n        for (let i in photos) {\n            form.append('photos', photos[i]);\n        }\n        form.append('description', description);\n        form.append('creater', localStorage.getItem('email'))\n        form.append('time', new Date().toLocaleString())\n        return axios.post(\n            localStorage.getItem(\"ip\") + \"/api/v1/user-profile/newpost\",\n            form,\n            {\n                headers: {'Content-Type': 'multipart/form-data'},\n            }\n        ).then(res => {\n            console.log(res);\n            alert(\"Submit successfully!\")\n            setSuccess(true);\n        })\n    }\n\n    const handleDeletePhoto = (index) => {\n        const newPhotos = [...photos];\n        newPhotos.splice(index, 1);\n        setPhotos(newPhotos);\n    }\n\n    if (success) {\n        return <Redirect to=\"/home\"/>\n    }\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Typography variant=\"h4\" gutterBottom>\n                    Create a New Post\n                </Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"select-category-label\">Post Category</InputLabel>\n                            <Select\n                                labelId=\"select-category-label\"\n                                id=\"demo-simple-select-outlined\"\n                                value={postCategory}\n                                onChange={e => setPostCategory(e.target.value)}\n                                label=\"Post Category\"\n                            >\n                                <MenuItem value={\"general\"}>General</MenuItem>\n                                <MenuItem value={\"catDating\"}>Cat Dating</MenuItem>\n                            </Select>\n                        </FormControl>\n                        {\n                            postCategory === \"catDating\" ? <div>\n                                <form style={{width: '50%', margin: '1rem 0'}} noValidate>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                value={catName}\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                name=\"catName\"\n                                                label=\"Cat Name\"\n                                                type=\"text\"\n                                                id=\"catName\"\n                                                onChange={e => setCatName(e.target.value)}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                value={catAge}\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                id=\"catAge\"\n                                                label=\"Cat Age\"\n                                                name=\"catAge\"\n                                                type=\"text\"\n                                                onChange={e => setCatAge(e.target.value)}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                value={catBreed}\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                name=\"catBreed\"\n                                                label=\"Cat Breed\"\n                                                type=\"text\"\n                                                id=\"catBreed\"\n                                                autoComplete=\"current-password\"\n                                                onChange={e => setCatBreed(e.target.value)}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                value={catLocation}\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                name=\"catLocation\"\n                                                label=\"Cat Location\"\n                                                type=\"text\"\n                                                id=\"catLocation\"\n                                                onChange={e => setCatLocation(e.target.value)}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </form>\n                            </div> : <React.Fragment />\n                        }\n                        <Typography variant=\"h6\" gutterBottom>\n                            Upload your cat photos:\n                        </Typography>\n                        <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            value=\"\"\n                            onChange={e => {\n                                console.log(e.target.files[0])\n                                setPhotos([...photos, e.target.files[0]])\n                                console.log(photos);\n                            }}\n                        />\n                        <Grid container>\n                            {\n                                photos.map((photo, index) => (\n                                    <Grid item xs={12} className={classes.imgGrid} key={index}>\n                                        <img\n                                            src={URL.createObjectURL(photo)}\n                                            alt=\"preview\"\n                                            style={{width: \"50%\"}}\n                                        />\n                                        <IconButton\n                                            className={classes.deleteBtn}\n                                            variant=\"outlined\"\n                                            onClick={() => handleDeletePhoto(index)}\n                                        >\n                                            <DeleteIcon/>\n                                        </IconButton>\n                                    </Grid>\n                                ))\n                            }\n                        </Grid>\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                                Upload Image\n                            </Button>\n                        </label>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            style={{minWidth: \"300px\"}}\n                            value={postTitle}\n                            variant=\"outlined\"\n                            required\n                            name=\"postTitle\"\n                            label=\"Post Title\"\n                            type=\"text\"\n                            id=\"postTitle\"\n                            onChange={e => setPostTitle(e.target.value)}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Describe your post here:\n                        </Typography>\n                        <TextField\n                            id=\"description\"\n                            name=\"description\"\n                            label=\"Description\"\n                            variant=\"outlined\"\n                            placeholder=\"Describe your post here...\"\n                            rows={4}\n                            fullWidth\n                            multiline\n                            onChange={e => setDescription(e.target.value)}\n                        />\n                    </Grid>\n                </Grid>\n            </Container>\n            <div className={classes.submitDiv}>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst mapStatesToProps = (state) => ({\n    loginStatus: state.getIn(['auth', 'loginStatus']),\n})\n\nexport default connect(mapStatesToProps, null)(CreatePost)\n"]},"metadata":{},"sourceType":"module"}