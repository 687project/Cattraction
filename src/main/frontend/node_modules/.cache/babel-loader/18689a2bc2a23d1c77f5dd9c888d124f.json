{"ast":null,"code":"import { fromJS } from 'immutable';\nimport { CHANGE_POST_DATA, CHANGE_POST_DATA_FAIL } from \"../actions/post\";\nconst defaultState = fromJS({\n  valid: false,\n  postTime: '',\n  photoList: [],\n  description: '',\n  userId: 0\n});\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case CHANGE_POST_DATA:\n      return state.merge({\n        valid: true,\n        postTime: action.post.post_time,\n        photoList: action.post.img_urls,\n        description: action.post.description,\n        userId: action.post.user_id\n      });\n\n    case CHANGE_POST_DATA_FAIL:\n      return state.set('valid', false);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/my/Desktop/Course/687/Project/demo/src/main/frontend/src/reducers/post.js"],"names":["fromJS","CHANGE_POST_DATA","CHANGE_POST_DATA_FAIL","defaultState","valid","postTime","photoList","description","userId","state","action","type","merge","post","post_time","img_urls","user_id","set"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,WAArB;AACA,SAAQC,gBAAR,EAA0BC,qBAA1B,QAAsD,iBAAtD;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAAC;AACxBI,EAAAA,KAAK,EAAE,KADiB;AAExBC,EAAAA,QAAQ,EAAE,EAFc;AAGxBC,EAAAA,SAAS,EAAE,EAHa;AAIxBC,EAAAA,WAAW,EAAE,EAJW;AAKxBC,EAAAA,MAAM,EAAE;AALgB,CAAD,CAA3B;AAQA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,gBAAL;AACI,aAAOQ,KAAK,CAACG,KAAN,CAAY;AACfR,QAAAA,KAAK,EAAE,IADQ;AAEfC,QAAAA,QAAQ,EAAEK,MAAM,CAACG,IAAP,CAAYC,SAFP;AAGfR,QAAAA,SAAS,EAAEI,MAAM,CAACG,IAAP,CAAYE,QAHR;AAIfR,QAAAA,WAAW,EAAEG,MAAM,CAACG,IAAP,CAAYN,WAJV;AAKfC,QAAAA,MAAM,EAAEE,MAAM,CAACG,IAAP,CAAYG;AALL,OAAZ,CAAP;;AAOJ,SAAKd,qBAAL;AACI,aAAOO,KAAK,CAACQ,GAAN,CAAU,OAAV,EAAmB,KAAnB,CAAP;;AACJ;AACI,aAAOR,KAAP;AAZR;AAcH,CAfD","sourcesContent":["import {fromJS} from 'immutable'\nimport {CHANGE_POST_DATA, CHANGE_POST_DATA_FAIL} from \"../actions/post\";\n\nconst defaultState = fromJS({\n    valid: false,\n    postTime: '',\n    photoList: [],\n    description: '',\n    userId: 0,\n})\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case CHANGE_POST_DATA:\n            return state.merge({\n                valid: true,\n                postTime: action.post.post_time,\n                photoList: action.post.img_urls,\n                description: action.post.description,\n                userId: action.post.user_id,\n            })\n        case CHANGE_POST_DATA_FAIL:\n            return state.set('valid', false);\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}